page-player-setting
  div.flex.flex-column.h-full
    module-header(title='プレイヤー設定', back='{true}')
    div.h-full.overflow-scroll(ref='body')
      div.container.s-full.p25
        div.mb30
          div.fs20.bold.text-center.mb10 プレイヤー数
          div.f.fh
            div.bg-white.border(onclick='{decrease}')
              i.icon-arrow_left
            div.mx10 {num}
            div.bg-white.border(onclick='{increase}')
              i.icon-arrow_right
        div.mb30
          div.mb10(each='{player,index in players}')
            div.f.fh
              //- プレイヤー消す
              i.icon-close.mr10
              input.border(type='text', placeholder='プレイヤー{index+1}') 
              //- プレイヤー名消す
              //- div.border 名前消す
        div.f.fh
          atom-next-btn(item='{nextBtn}')

  script.
    //- デフォルト設定
    //- 人数
    this.num = 3;
    //- ローカルに保存
    localStorage.setItem('player_num', JSON.stringify(this.num));
    //- プレイヤー名
    this.players = [
      {label: 'プレイヤー'},
      {label: 'プレイヤー'},
      {label: 'プレイヤー'},
    ];
    //- 次へボタン
    this.nextBtn = {label: 'ゲーム設定へ', link: '/game-setting'};

    this.on('mount', () => {
      //- ローカルに保存
      //- localStorage.setItem('player_num', JSON.stringify(this.num));
    });

    this.move = (e) => {
      e.preventDefault();
      e.stopPropagation();
      app.routeful.go(e.item.link);
    };

    //- プレイヤー減らす
    this.decrease = () => {
      if(this.num <= 3) return;
      this.num--;
      //- ローカルに保存
      localStorage.setItem('player_num', JSON.stringify(this.num));
    };

    //- プレイヤー増やす
    this.increase = () => {
      this.num++;
      //- ローカルに保存
      localStorage.setItem('player_num', JSON.stringify(this.num));    };